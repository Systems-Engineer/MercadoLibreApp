plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id("org.jmailen.kotlinter") version "3.4.0"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.brahian.mercadolibreapp"
        minSdkVersion 17
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.brahian.mercadolibreapp.runner.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:${hilt_version}"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:${hilt_version}"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    // Retrofit
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Ktx
    implementation "androidx.fragment:fragment-ktx:1.3.4"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"

    // Glide
    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // Test
    androidTestImplementation "androidx.test:core:${test_version}"
    androidTestImplementation "androidx.test.ext:truth:${test_version}"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.test:runner:${junit_runner_version}"
    androidTestImplementation "androidx.test:rules:${junit_runner_version}"

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'com.google.truth:truth:1.0'

    // Mockito
    androidTestImplementation "org.mockito:mockito-core:${mockito_version}"
    androidTestImplementation "org.mockito:mockito-android:${mockito_version}"

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:${espresso_version}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${espresso_version}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${espresso_version}"

    // MockWebServer
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${okhttp_version}"
    androidTestImplementation "com.squareup.okhttp3:okhttp:${okhttp_version}"
}

kapt {
    correctErrorTypes true
}

kotlinter {
    ignoreFailures = false
    indentSize = 2
    disabledRules = ["no-wildcard.imports"]
    reporters = ['checkstyle', 'html']
}